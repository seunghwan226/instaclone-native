{
    "sourceFile": "apollo.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 31,
            "patches": [
                {
                    "date": 1658142185723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1658143356054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\n \r\n const client = new ApolloClient({\r\n-\turi: \"http://localhost:4000/graphql\",\r\n+\turi: \"https://9592-111-91-152-107.jp.ngrok.io\",\r\n \tcache: new InMemoryCache(),\r\n });\r\n \r\n export default client;\r\n"
                },
                {
                    "date": 1658146005241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\n \r\n const client = new ApolloClient({\r\n-\turi: \"https://9592-111-91-152-107.jp.ngrok.io\",\r\n+\turi: \"http://localhost:4000/graphql\",\r\n \tcache: new InMemoryCache(),\r\n });\r\n \r\n export default client;\r\n"
                },
                {
                    "date": 1658146401453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n-import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\n+import { ApolloClient, InMemoryCache, makeVar } from \"@apollo/client\";\r\n \r\n+export const isLoggedIn = makeVar(false);\r\n+\r\n const client = new ApolloClient({\r\n \turi: \"http://localhost:4000/graphql\",\r\n \tcache: new InMemoryCache(),\r\n });\r\n"
                },
                {
                    "date": 1658146501015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { ApolloClient, InMemoryCache, makeVar } from \"@apollo/client\";\r\n \r\n-export const isLoggedIn = makeVar(false);\r\n+export const isLoggedInVar = makeVar(false);\r\n \r\n const client = new ApolloClient({\r\n \turi: \"http://localhost:4000/graphql\",\r\n \tcache: new InMemoryCache(),\r\n"
                },
                {
                    "date": 1658147165582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n export const isLoggedInVar = makeVar(false);\r\n \r\n const client = new ApolloClient({\r\n-\turi: \"http://localhost:4000/graphql\",\r\n+\turi: \"https://a99a-111-91-152-107.jp.ngrok.io/graphql\",\r\n \tcache: new InMemoryCache(),\r\n });\r\n \r\n export default client;\r\n"
                },
                {
                    "date": 1658148985523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,10 @@\n \r\n export const isLoggedInVar = makeVar(false);\r\n \r\n const client = new ApolloClient({\r\n-\turi: \"https://a99a-111-91-152-107.jp.ngrok.io/graphql\",\r\n+\t//ri: \"https://a99a-111-91-152-107.jp.ngrok.io/graphql\",\r\n+\turi: \"http://localhost:4000\",\r\n \tcache: new InMemoryCache(),\r\n });\r\n \r\n export default client;\r\n"
                },
                {
                    "date": 1658149122868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n export const isLoggedInVar = makeVar(false);\r\n \r\n const client = new ApolloClient({\r\n \t//ri: \"https://a99a-111-91-152-107.jp.ngrok.io/graphql\",\r\n-\turi: \"http://localhost:4000\",\r\n+\turi: \"http://localhost:4000/graphql\",\r\n \tcache: new InMemoryCache(),\r\n });\r\n \r\n export default client;\r\n"
                },
                {
                    "date": 1658149339753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,9 @@\n \r\n export const isLoggedInVar = makeVar(false);\r\n \r\n const client = new ApolloClient({\r\n-\t//ri: \"https://a99a-111-91-152-107.jp.ngrok.io/graphql\",\r\n-\turi: \"http://localhost:4000/graphql\",\r\n+\turi: \"https://a99a-111-91-152-107.jp.ngrok.io/graphql\",\r\n \tcache: new InMemoryCache(),\r\n });\r\n \r\n export default client;\r\n"
                },
                {
                    "date": 1658218010924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n export const isLoggedInVar = makeVar(false);\r\n \r\n const client = new ApolloClient({\r\n-\turi: \"https://a99a-111-91-152-107.jp.ngrok.io/graphql\",\r\n+\turi: \"https://7585-111-91-152-107.jp.ngrok.io/graphql\",\r\n \tcache: new InMemoryCache(),\r\n });\r\n \r\n export default client;\r\n"
                },
                {
                    "date": 1658219392014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,17 @@\n import { ApolloClient, InMemoryCache, makeVar } from \"@apollo/client\";\r\n+import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n \r\n export const isLoggedInVar = makeVar(false);\r\n \r\n+export const logUserId = async (token) => {\r\n+\tawait AsyncStorage.multiSet([\r\n+\t\t[\"token\", JSON.stringify(token)],\r\n+\t\t[\"loggedIn\", JSON.stringify(\"yes\")],\r\n+\t]);\r\n+\tisLoggedInVar(true);\r\n+};\r\n+\r\n const client = new ApolloClient({\r\n \turi: \"https://7585-111-91-152-107.jp.ngrok.io/graphql\",\r\n \tcache: new InMemoryCache(),\r\n });\r\n"
                },
                {
                    "date": 1658219424588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n \r\n export const isLoggedInVar = makeVar(false);\r\n \r\n-export const logUserId = async (token) => {\r\n+export const logUserIn = async (token) => {\r\n \tawait AsyncStorage.multiSet([\r\n \t\t[\"token\", JSON.stringify(token)],\r\n \t\t[\"loggedIn\", JSON.stringify(\"yes\")],\r\n \t]);\r\n"
                },
                {
                    "date": 1658220412377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,11 @@\n import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n \r\n export const isLoggedInVar = makeVar(false);\r\n \r\n-export const logUserIn = async (token) => {\r\n+export const logUserIn = async (Authorization) => {\r\n \tawait AsyncStorage.multiSet([\r\n-\t\t[\"token\", JSON.stringify(token)],\r\n+\t\t[\"Authorization\", JSON.stringify(Authorization)],\r\n \t\t[\"loggedIn\", JSON.stringify(\"yes\")],\r\n \t]);\r\n \tisLoggedInVar(true);\r\n };\r\n"
                },
                {
                    "date": 1658220584830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { ApolloClient, InMemoryCache, makeVar } from \"@apollo/client\";\r\n import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n \r\n export const isLoggedInVar = makeVar(false);\r\n+export const authVar = makeVar(\"\");\r\n \r\n export const logUserIn = async (Authorization) => {\r\n \tawait AsyncStorage.multiSet([\r\n \t\t[\"Authorization\", JSON.stringify(Authorization)],\r\n"
                },
                {
                    "date": 1658220668137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n \t\t[\"Authorization\", JSON.stringify(Authorization)],\r\n \t\t[\"loggedIn\", JSON.stringify(\"yes\")],\r\n \t]);\r\n \tisLoggedInVar(true);\r\n+\tauthVar(Authorization);\r\n };\r\n \r\n const client = new ApolloClient({\r\n \turi: \"https://7585-111-91-152-107.jp.ngrok.io/graphql\",\r\n"
                },
                {
                    "date": 1658288393943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \tauthVar(Authorization);\r\n };\r\n \r\n const client = new ApolloClient({\r\n-\turi: \"https://7585-111-91-152-107.jp.ngrok.io/graphql\",\r\n+\turi: \"https://fb2b-111-91-152-107.jp.ngrok.io/graphql\",\r\n \tcache: new InMemoryCache(),\r\n });\r\n \r\n export default client;\r\n"
                },
                {
                    "date": 1658319482856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,14 @@\n \tisLoggedInVar(true);\r\n \tauthVar(Authorization);\r\n };\r\n \r\n+const httpLink = createHttpLink({\r\n+\turi: \"https://fb2b-111-91-152-107.jp.ngrok.io/graphql\",\r\n+});\r\n+\r\n const client = new ApolloClient({\r\n-\turi: \"https://fb2b-111-91-152-107.jp.ngrok.io/graphql\",\r\n+\tlink: httpLink,\r\n \tcache: new InMemoryCache(),\r\n });\r\n \r\n export default client;\r\n"
                },
                {
                    "date": 1658319528200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import { ApolloClient, InMemoryCache, makeVar } from \"@apollo/client\";\r\n import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n+import {setContext} = \"@apollo/client/link/context\"\r\n \r\n+\r\n export const isLoggedInVar = makeVar(false);\r\n export const authVar = makeVar(\"\");\r\n \r\n export const logUserIn = async (Authorization) => {\r\n@@ -16,8 +18,10 @@\n const httpLink = createHttpLink({\r\n \turi: \"https://fb2b-111-91-152-107.jp.ngrok.io/graphql\",\r\n });\r\n \r\n+const authLink = setContext\r\n+\r\n const client = new ApolloClient({\r\n \tlink: httpLink,\r\n \tcache: new InMemoryCache(),\r\n });\r\n"
                },
                {
                    "date": 1658319535748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import { ApolloClient, InMemoryCache, makeVar } from \"@apollo/client\";\r\n import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n-import {setContext} = \"@apollo/client/link/context\"\r\n+import { setContext } from \"@apollo/client/link/context\";\r\n \r\n-\r\n export const isLoggedInVar = makeVar(false);\r\n export const authVar = makeVar(\"\");\r\n \r\n export const logUserIn = async (Authorization) => {\r\n@@ -18,9 +17,9 @@\n const httpLink = createHttpLink({\r\n \turi: \"https://fb2b-111-91-152-107.jp.ngrok.io/graphql\",\r\n });\r\n \r\n-const authLink = setContext\r\n+const authLink = setContext;\r\n \r\n const client = new ApolloClient({\r\n \tlink: httpLink,\r\n \tcache: new InMemoryCache(),\r\n"
                },
                {
                    "date": 1658319552448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,10 @@\n-import { ApolloClient, InMemoryCache, makeVar } from \"@apollo/client\";\r\n+import {\r\n+\tApolloClient,\r\n+\tInMemoryCache,\r\n+\tmakeVar,\r\n+\tcreateHttpLink,\r\n+} from \"@apollo/client\";\r\n import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n import { setContext } from \"@apollo/client/link/context\";\r\n \r\n export const isLoggedInVar = makeVar(false);\r\n"
                },
                {
                    "date": 1658319630965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,12 +22,19 @@\n const httpLink = createHttpLink({\r\n \turi: \"https://fb2b-111-91-152-107.jp.ngrok.io/graphql\",\r\n });\r\n \r\n-const authLink = setContext;\r\n+const authLink = setContext((_, { headers }) => {\r\n+\treturn {\r\n+\t\theaders: {\r\n+\t\t\t...headers,\r\n+\t\t\ttoken: authVar(),\r\n+\t\t},\r\n+\t};\r\n+});\r\n \r\n const client = new ApolloClient({\r\n-\tlink: httpLink,\r\n+\tlink: authLink.concat(httpLink),\r\n \tcache: new InMemoryCache(),\r\n });\r\n \r\n export default client;\r\n"
                },
                {
                    "date": 1658319695762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,12 @@\n \tisLoggedInVar(true);\r\n \tauthVar(Authorization);\r\n };\r\n \r\n+export const logUserOut = async () => {\r\n+\tawait AsyncStorage.multiRemove([\"Authorization\", \"loggedIn\"]);\r\n+};\r\n+\r\n const httpLink = createHttpLink({\r\n \turi: \"https://fb2b-111-91-152-107.jp.ngrok.io/graphql\",\r\n });\r\n \r\n"
                },
                {
                    "date": 1658319764302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,18 +10,17 @@\n export const isLoggedInVar = makeVar(false);\r\n export const authVar = makeVar(\"\");\r\n \r\n export const logUserIn = async (Authorization) => {\r\n-\tawait AsyncStorage.multiSet([\r\n-\t\t[\"Authorization\", JSON.stringify(Authorization)],\r\n-\t\t[\"loggedIn\", JSON.stringify(\"yes\")],\r\n-\t]);\r\n+\tawait AsyncStorage.setItem(\"Authorization\", Authorization);\r\n \tisLoggedInVar(true);\r\n \tauthVar(Authorization);\r\n };\r\n \r\n export const logUserOut = async () => {\r\n-\tawait AsyncStorage.multiRemove([\"Authorization\", \"loggedIn\"]);\r\n+\tawait AsyncStorage.removeItem(\"Authorization\");\r\n+\tisLoggedInVar(false);\r\n+\tauthVar(null);\r\n };\r\n \r\n const httpLink = createHttpLink({\r\n \turi: \"https://fb2b-111-91-152-107.jp.ngrok.io/graphql\",\r\n"
                },
                {
                    "date": 1658319982023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n const authLink = setContext((_, { headers }) => {\r\n \treturn {\r\n \t\theaders: {\r\n \t\t\t...headers,\r\n-\t\t\ttoken: authVar(),\r\n+\t\t\tAuthorization: authVar(),\r\n \t\t},\r\n \t};\r\n });\r\n \r\n"
                },
                {
                    "date": 1658727453053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n \tauthVar(null);\r\n };\r\n \r\n const httpLink = createHttpLink({\r\n-\turi: \"https://fb2b-111-91-152-107.jp.ngrok.io/graphql\",\r\n+\turi: \"https://1432-111-91-152-107.jp.ngrok.io/graphql\",\r\n });\r\n \r\n const authLink = setContext((_, { headers }) => {\r\n \treturn {\r\n"
                },
                {
                    "date": 1658845241084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n \tauthVar(null);\r\n };\r\n \r\n const httpLink = createHttpLink({\r\n-\turi: \"https://1432-111-91-152-107.jp.ngrok.io/graphql\",\r\n+\turi: \"https://2019-111-91-152-107.jp.ngrok.io/graphql\",\r\n });\r\n \r\n const authLink = setContext((_, { headers }) => {\r\n \treturn {\r\n"
                },
                {
                    "date": 1658846963058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,18 @@\n });\r\n \r\n const client = new ApolloClient({\r\n \tlink: authLink.concat(httpLink),\r\n-\tcache: new InMemoryCache(),\r\n+\tcache: new InMemoryCache({\r\n+\t\ttypePolicies: {\r\n+\t\t\tQuery: {\r\n+\t\t\t\tfields: {\r\n+\t\t\t\t\tseeFeed: {\r\n+\t\t\t\t\t\tkeyArgs: false,\r\n+\t\t\t\t\t},\r\n+\t\t\t\t},\r\n+\t\t\t},\r\n+\t\t},\r\n+\t}),\r\n });\r\n \r\n export default client;\r\n"
                },
                {
                    "date": 1658847049464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,4 +50,5 @@\n \t}),\r\n });\r\n \r\n export default client;\r\n+`\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658847141325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,13 +42,15 @@\n \t\t\tQuery: {\r\n \t\t\t\tfields: {\r\n \t\t\t\t\tseeFeed: {\r\n \t\t\t\t\t\tkeyArgs: false,\r\n+\t\t\t\t\t\tmerge(existing = [], incoming = []) {\r\n+\t\t\t\t\t\t\treturn [...existing, ...incoming];\r\n+\t\t\t\t\t\t},\r\n \t\t\t\t\t},\r\n \t\t\t\t},\r\n \t\t\t},\r\n \t\t},\r\n \t}),\r\n });\r\n\\ No newline at end of file\n \r\n export default client;\r\n-`\n"
                },
                {
                    "date": 1658847349933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n \tcreateHttpLink,\r\n } from \"@apollo/client\";\r\n import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n import { setContext } from \"@apollo/client/link/context\";\r\n+import { offsetLimitPagination } from \"@apollo/client/utilities\";\r\n \r\n export const isLoggedInVar = makeVar(false);\r\n export const authVar = makeVar(\"\");\r\n \r\n@@ -40,17 +41,12 @@\n \tcache: new InMemoryCache({\r\n \t\ttypePolicies: {\r\n \t\t\tQuery: {\r\n \t\t\t\tfields: {\r\n-\t\t\t\t\tseeFeed: {\r\n-\t\t\t\t\t\tkeyArgs: false,\r\n-\t\t\t\t\t\tmerge(existing = [], incoming = []) {\r\n-\t\t\t\t\t\t\treturn [...existing, ...incoming];\r\n-\t\t\t\t\t\t},\r\n-\t\t\t\t\t},\r\n+\t\t\t\t\tseeFeed: offsetLimitPagination(),\r\n \t\t\t\t},\r\n \t\t\t},\r\n \t\t},\r\n \t}),\r\n });\r\n \r\n\\ No newline at end of file\n-export default client;\n+export default client;\r\n"
                },
                {
                    "date": 1658847363043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,11 +42,17 @@\n \t\ttypePolicies: {\r\n \t\t\tQuery: {\r\n \t\t\t\tfields: {\r\n \t\t\t\t\tseeFeed: offsetLimitPagination(),\r\n+\t\t\t\t\t// {\r\n+\t\t\t\t\t// \tkeyArgs: false,\r\n+\t\t\t\t\t// \tmerge(existing = [], incoming = []) {\r\n+\t\t\t\t\t// \t\treturn [...existing, ...incoming];\r\n+\t\t\t\t\t// \t},\r\n+\t\t\t\t\t// },\r\n \t\t\t\t},\r\n\\ No newline at end of file\n \t\t\t},\r\n \t\t},\r\n \t}),\r\n });\r\n \r\n-export default client;\n+export default client;\r\n"
                },
                {
                    "date": 1660661164713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,10 @@\n \t\t},\r\n \t};\r\n });\r\n \r\n+export const cache = new InMemoryCache();\r\n+\r\n const client = new ApolloClient({\r\n \tlink: authLink.concat(httpLink),\r\n \tcache: new InMemoryCache({\r\n \t\ttypePolicies: {\r\n@@ -54,5 +56,5 @@\n \t\t},\r\n \t}),\r\n });\r\n \r\n-export default client;\n\\ No newline at end of file\n+export default client;\r\n"
                }
            ],
            "date": 1658142185723,
            "name": "Commit-0",
            "content": "import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\n\r\nconst client = new ApolloClient({\r\n\turi: \"http://localhost:4000/graphql\",\r\n\tcache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n"
        }
    ]
}